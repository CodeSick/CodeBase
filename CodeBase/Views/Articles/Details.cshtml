@model CodeBase.Models.Article
@{
    ViewBag.Title = Model.Title;
}
@using CodeBase.Models
<h1 class="article">@Model.Title</h1>
<div class="article-author">
<a class="author"href="@{string UserUrl = Html.BuildUrlFromExpression<UsersController>(c => c.Details(Model.Author.UserId));}@UserUrl">@Html.DisplayTextFor(_ => Model.Author.Username).ToString()</a>
@String.Format("{0:MMMM d, yyyy}", Model.Date)
in
<a href="@{string CategoryUrl = Html.BuildUrlFromExpression<CategoriesController>(c => c.Details(Model.Category.CategoryId));}@CategoryUrl"">@(Model.Category == null ? "None" : Model.Category.Title)</a>
</div>
@Html.Partial("ArticleFull")
@Html.Partial("RenderFiles", Model.Files)<br />
@if (Request.IsAuthenticated)
{
    String mes = null;
    if (ViewData["subscribed"].Equals("yes"))
    {
        mes = "Unsubscribe";
    }
    else
    {
        mes = "Subscribe";
    }
    <span id="trigger">@Html.Raw(mes + " to this article") </span>
    
    <div id="dialog-confirm" title="Un/Subscribe to this question ?">
	    Subscribe to this article. If you already have a subscription, you will be unsubscribed
    </div>
    <div id="callbackMessage"></div>
    
    <script type="text/javascript">
    $("#dialog-confirm").css("display", "none");
    $("#trigger").click(function () {
        $("#dialog-confirm").dialog({
            resizable: false,
            height: 170,
            modal: true,
            buttons: {
                "Subscribe/Unsubscribe": function () {
                    $.ajax({
                        url: '@Url.Action("Subscribe","Articles")',
                        type: "POST",
                        data: { "articleid": '@Model.ArticleId' },
                        success: function (data) {
                            if (data == "subscribed") {
                                $("#dialog-confirm").html("<span style=\"color: red\">You are now subscribed</span>");
                            } else {
                                $("#dialog-confirm").html("<span style=\"color: red\">Your subscription has been cancelled</span>");
                            }
                        }
                    });

                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });
    });
    </script>
}

@Html.Partial("Comments", Model.Comments)
@if (User.Identity.IsAuthenticated)
{
    using (Html.BeginForm(new { action = "AddComment" }))
    {
        <div class="comment-post">
            <h1>Leave a comment</h1>
            <div class="comment-post-textarea-container">
                @Html.ValidationSummary(true)
                @Html.Partial("_CommentCreate", new Comment { ArticleId = Model.ArticleId })
            </div>
            <div class="buttons">
                <input type="submit" class="button" value="Post comment"/>
            </div>
        </div>
    }
}
@Html.ActionLink("Back to List", "Index")